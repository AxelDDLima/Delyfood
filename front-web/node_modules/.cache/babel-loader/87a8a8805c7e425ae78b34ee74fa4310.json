{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Pichau\\\\Desktop\\\\xexeu\\\\AllfilesDelyfood-main\\\\front-web\\\\src\\\\Orders\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { fetchProducts, saveOrder } from \"../api\";\nimport ProductsList from \"./ProductsList\";\nimport StepsHeader from \"./StepsHeader\";\nimport \"./styles.css\";\nimport OrderLocation from \"./OrderLocation\";\nimport OrderSummary from \"./OrderSummary\";\nimport { checkIsSelected } from \"./helpers\";\nimport { useHistory } from 'react-router-dom';\n\nfunction Orders() {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState(); // const { cpf } = user;\n  // if (!user?.cpf){\n  //    history.push(\"/login\")\n  // }\n\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [orderLocation, setOrderLocation] = useState();\n  const totalPrice = selectedProducts.reduce((sum, item) => {\n    return sum + item.price;\n  }, 0);\n  useEffect(() => {\n    fetchProducts().then(response => setProducts(response.data)).catch(() => {\n      toast.warning(\"Erro ao listar pedidos\");\n    });\n  }, []);\n\n  const handleSelectProduct = product => {\n    const isAlreadySelected = checkIsSelected(selectedProducts, product);\n\n    if (isAlreadySelected) {\n      const selected = selectedProducts.filter(item => item.id !== product.id);\n      setSelectedProducts(selected);\n    } else {\n      setSelectedProducts(previous => [...previous, product]);\n    }\n  };\n\n  const handleSubmit = () => {\n    const productsIds = selectedProducts.map(({\n      id\n    }) => ({\n      id\n    }));\n    const payload = { ...orderLocation,\n      products: productsIds\n    };\n    saveOrder(payload).then(response => {\n      toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n      setSelectedProducts([]);\n    }).catch(() => {\n      toast.warning(\"Erro ao enviar pedido\");\n    });\n  };\n\n  useEffect(() => {\n    const getUser = localStorage.getItem('user');\n    const parseUser = JSON.parse(getUser);\n    console.log(parseUser);\n    setUser(parseUser);\n  }, []);\n  console.log('eu', user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(StepsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductsList, {\n        products: products,\n        onSelectProduct: handleSelectProduct,\n        selectedProducts: selectedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderLocation, {\n        onChangeLocation: location => setOrderLocation(location)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {\n        amount: selectedProducts.length,\n        totalPrice: totalPrice,\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this) : history.push('/')\n  }, void 0, false);\n}\n\n_s(Orders, \"kEQ53o2WNfZNPx0Jrt971Rwvx/g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/Pichau/Desktop/xexeu/AllfilesDelyfood-main/front-web/src/Orders/index.tsx"],"names":["useEffect","useState","toast","fetchProducts","saveOrder","ProductsList","StepsHeader","OrderLocation","OrderSummary","checkIsSelected","useHistory","Orders","history","user","setUser","products","setProducts","selectedProducts","setSelectedProducts","orderLocation","setOrderLocation","totalPrice","reduce","sum","item","price","then","response","data","catch","warning","handleSelectProduct","product","isAlreadySelected","selected","filter","id","previous","handleSubmit","productsIds","map","payload","error","getUser","localStorage","getItem","parseUser","JSON","parse","console","log","location","length","push"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { fetchProducts, saveOrder } from \"../api\";\nimport ProductsList from \"./ProductsList\";\nimport StepsHeader from \"./StepsHeader\";\nimport \"./styles.css\";\nimport { OrderLocationData, Product } from \"./types\";\nimport OrderLocation from \"./OrderLocation\";\nimport OrderSummary from \"./OrderSummary\";\nimport { checkIsSelected } from \"./helpers\";\nimport { useHistory } from 'react-router-dom';\n\ntype User = {\n  cpf : string,\n  password : string\n}\n\nfunction Orders() {\n  const history = useHistory();\n  const [user, setUser] = useState<any>();\n \n  // const { cpf } = user;\n  // if (!user?.cpf){\n  //    history.push(\"/login\")\n  // }\n\n\n  const [products, setProducts] = useState<Product[]>([]);\n  const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\n  const [orderLocation, setOrderLocation] = useState<OrderLocationData>();\n  const totalPrice = selectedProducts.reduce((sum, item) => {\n    return sum + item.price;\n  }, 0);\n\n  useEffect(() => {\n    fetchProducts()\n      .then((response) => setProducts(response.data))\n      .catch(() => {\n        toast.warning(\"Erro ao listar pedidos\");\n      });\n  }, []);\n\n  const handleSelectProduct = (product: Product) => {\n    const isAlreadySelected = checkIsSelected(selectedProducts, product);\n\n    if (isAlreadySelected) {\n      const selected = selectedProducts.filter(\n        (item) => item.id !== product.id\n      );\n      setSelectedProducts(selected);\n    } else {\n      setSelectedProducts((previous) => [...previous, product]);\n    }\n  };\n\n  const handleSubmit = () => {\n    const productsIds = selectedProducts.map(({ id }) => ({ id }));\n    const payload = {\n      ...orderLocation!,\n      products: productsIds,\n    };\n\n    saveOrder(payload)\n      .then((response) => {\n        toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n        setSelectedProducts([]);\n      })\n      .catch(() => {\n        toast.warning(\"Erro ao enviar pedido\");\n      });\n  };\n  useEffect(() => {\n    const getUser: any = localStorage.getItem('user')\n    const parseUser = JSON.parse(getUser);\n    console.log(parseUser)\n    setUser(parseUser)\n    \n  }, []);\n  console.log('eu',user)\n\n  return (\n    \n    <>\n    {user ? (\n      <div className=\"orders-container\">\n        <StepsHeader />\n        <ProductsList\n          products={products}\n          onSelectProduct={handleSelectProduct}\n          selectedProducts={selectedProducts}\n        />\n        <OrderLocation\n          onChangeLocation={(location) => setOrderLocation(location)}\n        />\n        <OrderSummary\n          amount={selectedProducts.length}\n          totalPrice={totalPrice}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    ) :  history.push('/')} \n      \n    </>\n  );\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}