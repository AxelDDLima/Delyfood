{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\qq coisa faculdade\\\\xexeu\\\\AllfilesDelyfood-main\\\\front-web\\\\src\\\\Login\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport { loginClient } from \"../api\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport { regex } from \"../util/regex\";\n\nconst Login = ({\n  userTest\n}) => {\n  _s();\n\n  const {\n    cpf = '',\n    password = '' // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  } = userTest || {};\n  const history = useHistory(); // const [usert, setUserT] = React.useState<User>();\n\n  const [newCpf, setCpf] = React.useState(cpf);\n  const [newPassword, setPassword] = React.useState(password); // const [newId] = React.useState(id);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      cpf: newCpf,\n      password: newPassword\n    }; // if (!cpf || !password)\n    //   \n\n    try {\n      // const {cpf, password} = user\n      const response = await loginClient(user);\n      const userJson = JSON.stringify(response.data.id); // const { id } = userJson;\n\n      localStorage.setItem('user', userJson);\n      toast.success(\"Login efetuado com sucesso!\");\n      history.push(\"/orders\");\n    } catch (error) {\n      return toast.error(\"Dados inválidos!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"geral\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerLogin\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pinput\",\n            children: \"Usu\\xE1rio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: 14,\n            value: regex.maskCpf(newCpf),\n            className: \"inputlogin placeholder-text\",\n            type: \"text\",\n            placeholder: \"CPF\",\n            onChange: ({\n              target\n            }) => setCpf(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pinput\",\n            children: \"Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newPassword,\n            className: \"inputlogin placeholder-text\",\n            type: \"password\",\n            placeholder: \"Senha\",\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnlogin\",\n            type: \"submit\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h1register\",\n            children: \"Cadastre-se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"8osVs5jI7Xb7rlD3yphezvUl6ww=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/qq coisa faculdade/xexeu/AllfilesDelyfood-main/front-web/src/Login/index.tsx"],"names":["React","Link","loginClient","toast","useHistory","regex","Login","userTest","cpf","password","history","newCpf","setCpf","useState","newPassword","setPassword","handleSubmit","e","preventDefault","user","response","userJson","JSON","stringify","data","id","localStorage","setItem","success","push","error","maskCpf","target","value"],"mappings":"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","sourcesContent":["import React, { FormEvent } from \"react\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport { loginClient } from \"../api\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport { regex } from \"../util/regex\";\nimport Navbar from \"../Navbar\";\n\n// import { Container } from './styles';\n\ntype User = {\n  cpf: string,\n  password: string,\n  id: number\n}\n\ntype UserTest = {\n  userTest?: User\n}\n\nconst Login = ({userTest}: UserTest) => {\n  const {\n    cpf = '',\n    password = '',\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  } = userTest || {};\n\n  const history = useHistory();\n  // const [usert, setUserT] = React.useState<User>();\n  const [newCpf, setCpf] = React.useState(cpf);\n  const [newPassword, setPassword] = React.useState(password);\n  // const [newId] = React.useState(id);\n  \n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    const user = {cpf : newCpf, password : newPassword}\n\n    // if (!cpf || !password)\n    //   \n    try {\n      // const {cpf, password} = user\n      const response = await loginClient(user);\n      const userJson = JSON.stringify(response.data.id)\n      // const { id } = userJson;\n      localStorage.setItem('user', userJson);\n      toast.success(\"Login efetuado com sucesso!\");\n      history.push(\"/orders\");\n    } catch (error) {\n      return toast.error(\"Dados inválidos!\");\n    }\n  };\n  return (\n    <>\n      {/* <Navbar /> */}\n      <div className=\"geral\">\n        <div className=\"containerLogin\">\n          <h1 className=\"h1login\">Login</h1>\n          <form onSubmit={handleSubmit}>\n            <p className=\"pinput\">Usuário:</p>\n            <input\n              maxLength={14}\n              value={regex.maskCpf(newCpf)}\n              className=\"inputlogin placeholder-text\"\n              type=\"text\"\n              placeholder=\"CPF\"\n              onChange={({target}) => setCpf(target.value)}\n            />\n            <p className=\"pinput\">Senha:</p>\n            <input\n              value={newPassword}\n              className=\"inputlogin placeholder-text\"\n              type=\"password\"\n              placeholder=\"Senha\"\n              onChange={({target}) => setPassword(target.value)}\n            />\n            <button className=\"btnlogin\" type='submit'>Entrar</button>\n          </form>\n          <Link to=\"/register\">\n            <h1 className=\"h1register\">Cadastre-se</h1>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}