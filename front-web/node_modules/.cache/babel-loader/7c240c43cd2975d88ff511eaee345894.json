{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Pichau\\\\Desktop\\\\xexeu\\\\AllfilesDelyfood-main\\\\front-web\\\\src\\\\Orders\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { fetchProducts, saveOrder } from \"../api\";\nimport ProductsList from \"./ProductsList\";\nimport StepsHeader from \"./StepsHeader\";\nimport \"./styles.css\";\nimport OrderLocation from \"./OrderLocation\";\nimport OrderSummary from \"./OrderSummary\";\nimport { checkIsSelected } from \"./helpers\";\n\nfunction Orders() {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const getUser = localStorage.getItem('user');\n    const parseUser = JSON.parse(getUser);\n    setUser(parseUser);\n  }, []); // const { cpf } = user;\n  // if (!user?.cpf){\n  //    history.push(\"/login\")\n  // }\n\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [orderLocation, setOrderLocation] = useState();\n  const totalPrice = selectedProducts.reduce((sum, item) => {\n    return sum + item.price;\n  }, 0);\n  useEffect(() => {\n    fetchProducts().then(response => setProducts(response.data)).catch(() => {\n      toast.warning(\"Erro ao listar pedidos\");\n    });\n  }, []);\n\n  const handleSelectProduct = product => {\n    const isAlreadySelected = checkIsSelected(selectedProducts, product);\n\n    if (isAlreadySelected) {\n      const selected = selectedProducts.filter(item => item.id !== product.id);\n      setSelectedProducts(selected);\n    } else {\n      setSelectedProducts(previous => [...previous, product]);\n    }\n  };\n\n  const [id, setId] = useState(0);\n  useEffect(() => {\n    const getId = localStorage.getItem('user');\n    const {\n      id\n    } = JSON.parse(getId);\n    if (id) setId(id);\n    setId(id);\n  });\n\n  const handleSubmit = () => {\n    const productsIds = selectedProducts.map(({\n      id\n    }) => ({\n      id\n    }));\n    const payload = { ...orderLocation,\n      products: productsIds,\n      client: [{\n        id\n      }]\n    };\n    saveOrder(payload).then(response => {\n      toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n      setSelectedProducts([]);\n    }).catch(() => {\n      toast.warning(\"Erro ao enviar pedido\");\n    });\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(StepsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProductsList, {\n        products: products,\n        onSelectProduct: handleSelectProduct,\n        selectedProducts: selectedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(OrderLocation, {\n        onChangeLocation: location => setOrderLocation(location)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {\n        amount: selectedProducts.length,\n        totalPrice: totalPrice,\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(Orders, \"n6a5TbT1xe52UwrMJf2MOr1L7ao=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/Pichau/Desktop/xexeu/AllfilesDelyfood-main/front-web/src/Orders/index.tsx"],"names":["useEffect","useState","toast","fetchProducts","saveOrder","ProductsList","StepsHeader","OrderLocation","OrderSummary","checkIsSelected","Orders","user","setUser","getUser","localStorage","getItem","parseUser","JSON","parse","products","setProducts","selectedProducts","setSelectedProducts","orderLocation","setOrderLocation","totalPrice","reduce","sum","item","price","then","response","data","catch","warning","handleSelectProduct","product","isAlreadySelected","selected","filter","id","previous","setId","getId","handleSubmit","productsIds","map","payload","client","error","location","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { fetchProducts, saveOrder } from \"../api\";\nimport ProductsList from \"./ProductsList\";\nimport StepsHeader from \"./StepsHeader\";\nimport \"./styles.css\";\nimport { OrderLocationData, Product } from \"./types\";\nimport OrderLocation from \"./OrderLocation\";\nimport OrderSummary from \"./OrderSummary\";\nimport { checkIsSelected } from \"./helpers\";\n\n\ntype User = {\n  cpf : string,\n  password : string\n}\n\nfunction Orders() {\n  const [user, setUser] = useState<User>();\n  \n  useEffect(() => {\n    const getUser: any = localStorage.getItem('user')\n    const parseUser = JSON.parse(getUser);\n    setUser(parseUser)\n  }, []);\n\n \n  // const { cpf } = user;\n  // if (!user?.cpf){\n  //    history.push(\"/login\")\n  // }\n\n\n  const [products, setProducts] = useState<Product[]>([]);\n  const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\n  const [orderLocation, setOrderLocation] = useState<OrderLocationData>();\n  const totalPrice = selectedProducts.reduce((sum, item) => {\n    return sum + item.price;\n  }, 0);\n\n  useEffect(() => {\n    fetchProducts()\n      .then((response) => setProducts(response.data))\n      .catch(() => {\n        toast.warning(\"Erro ao listar pedidos\");\n      });\n  }, []);\n\n  const handleSelectProduct = (product: Product) => {\n    const isAlreadySelected = checkIsSelected(selectedProducts, product);\n\n    if (isAlreadySelected) {\n      const selected = selectedProducts.filter(\n        (item) => item.id !== product.id\n      );\n      setSelectedProducts(selected);\n    } else {\n      setSelectedProducts((previous) => [...previous, product]);\n    }\n  };\n\n  const [id, setId] = useState(0)\n  useEffect(() => {\n    const getId: any = localStorage.getItem('user');\n    const {id} = JSON.parse(getId)\n    if (id) setId(id)\n    setId(id)\n  })\n\n\n  const handleSubmit = () => {\n    const productsIds = selectedProducts.map(({ id }) => ({ id }));\n    const payload = {\n      ...orderLocation!,\n      products: productsIds,\n      client: [{id}]\n    };\n\n    saveOrder(payload)\n      .then((response) => {\n        toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n        setSelectedProducts([]);\n      })\n      .catch(() => {\n        toast.warning(\"Erro ao enviar pedido\");\n      });\n  };\n\n\n  if (!user) {\n    return null\n}\n  return (\n<>\n  <div className=\"orders-container\">\n    <StepsHeader />\n      <ProductsList\n        products={products}\n        onSelectProduct={handleSelectProduct}\n        selectedProducts={selectedProducts}\n      />\n    <OrderLocation\n      onChangeLocation={(location) => setOrderLocation(location)}\n    />\n    <OrderSummary\n      amount={selectedProducts.length}\n      totalPrice={totalPrice}\n      onSubmit={handleSubmit}\n    />\n  </div>\n</>\n  );\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}