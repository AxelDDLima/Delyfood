{"ast":null,"code":"export const regex = {\n  maskCpf: cpf => {\n    return cpf.replace(/\\D/g, '').replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d{1,2})$/, '$1-$2');\n  }\n};","map":{"version":3,"sources":["C:/Users/Pichau/Desktop/xexeu/AllfilesDelyfood-main/front-web/src/util/regex.ts"],"names":["regex","maskCpf","cpf","replace"],"mappings":"AACA,OAAO,MAAMA,KAAK,GAAG;AACjBC,EAAAA,OAAO,EAAIC,GAAD,IAAkB;AACxB,WAAOA,GAAG,CACXC,OADQ,CACA,KADA,EACO,EADP,EAERA,OAFQ,CAEA,aAFA,EAEe,OAFf,EAGRA,OAHQ,CAGA,aAHA,EAGe,OAHf,EAIRA,OAJQ,CAIA,mBAJA,EAIqB,OAJrB,CAAP;AAKH;AAPgB,CAAd","sourcesContent":["\r\nexport const regex = {\r\n    maskCpf : (cpf : string) => {\r\n        return cpf\r\n      .replace(/\\D/g, '')\r\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n      .replace(/(\\d{3})(\\d{1,2})$/, '$1-$2');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}